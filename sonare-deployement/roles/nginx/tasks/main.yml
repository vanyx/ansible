- name: Installer Nginx
  apt:
    name: nginx
    state: present
    update_cache: yes
  become: true

- name: Désactiver le site par défaut
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: Reload nginx
  become: true

- name: Créer le dossier /var/www/site
  file:
    path: /var/www/{{ site_name }}
    state: directory
    owner: www-data
    group: www-data
    mode: '0755'
  become: true

- name: Copier index.html
  copy:
    src: index.html
    dest: /var/www/{{ site_name }}/index.html
    owner: www-data
    group: www-data
    mode: '0644'
  become: true

- name: Copier icon.png
  copy:
    src: icon.png
    dest: /var/www/{{ site_name }}/icon.png
    owner: www-data
    group: www-data
    mode: '0644'
  become: true

- name: Créer la config Nginx pour le site
  copy:
    dest: /etc/nginx/sites-available/{{ site_name }}
    content: |
      server {
          listen 80;
          server_name {{ domain_name }};
          return 301 https://$host$request_uri;
      }

      server {
          listen 443 ssl http2;
          server_name {{ domain_name }};

          root /var/www/{{ site_name }};
          index index.html;

          ssl_certificate /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/{{ domain_name }}/privkey.pem;
          include /etc/letsencrypt/options-ssl-nginx.conf;
          ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

          # Sécurité HTTP headers
          add_header X-Frame-Options SAMEORIGIN;
          add_header X-Content-Type-Options nosniff;
          add_header X-XSS-Protection "1; mode=block";
          add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
          server_tokens off;

          location / {
              try_files $uri $uri/ =404;
          }

          # Bloquer fichiers sensibles
          location ~ /\.(git|env|ini|log|conf)$ {
              deny all;
              access_log off;
              log_not_found off;
          }
      }
  notify: Reload nginx
  become: true

- name: Activer le site
  file:
    src: /etc/nginx/sites-available/{{ site_name }}
    dest: /etc/nginx/sites-enabled/{{ site_name }}
    state: link
  notify: Reload nginx
  become: true

- name: S'assurer que le service Nginx est démarré et activé
  service:
    name: nginx
    state: started
    enabled: true
  become: true